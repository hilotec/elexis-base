<?xml version="1.0" encoding="utf-8"?>
<!-- $Id: build.xml 4076 2008-06-27 12:12:51Z rgw_ch $

	Dieses Ant-Script erstellt die Release-Versionen von Elexis
	Targets:
	windows		: Windows-Installer erstellen
	Linux  	    : Linux x386 - Installer erstellen
	clean       : Letzten Build wegräumen
    pro         : die Zusatzplugins erstellen

	Voraussetzungen:
	- Ant muss installiert sein
	- Version muss unter Eclipse auf dieser Maschine korrekt lauffähig sein
	- LaTeX inklusive KOMA muss installiert sein, es muss ein kommando 'texify'
	  existieren, welches makeindex und pdflatex laufen lässt
	- Für Windows-Installer: NSIS muss installiert sein
	- Es muss ein externes file namens local.properties im selben Verzeichnis wie dieses
	  build.xml existieren, das folgende systemspezifischen Daten enthält:
	  - svnrepo=svn://localhost/pd2/	# localhost gegen passende Adresse austauschen
	  - eclipse=e:/dev/eclipse	    	# Welche Eclipsebasis verwendet werden soll (RCP-Basis)
	  - keystore=u:/keys/hwkeys			# Zum Signieren der Jars
	  - source=/home/src/eclipse		# Wo die Quellcodes sind
	  - makeself				        # Pfad zum makeself -executable (für Linux-Distri)
	  - nsis				            # Pfad zum nsis-Executable (für Windows-Distri)
	  - jre					            # Pfad zum einzubindenden jre
	  - dest				            # Pfad zum Ausgabe-Verzeichnis
	  - ooo								# Pfad zum OpenOffice Verzeichnis
	(c) 2005-2008 G. Weirich
-->

<project name="elexis" default="all" basedir="../../">
	<description>
	    	Elexis - die Praxis
	</description>
	<property environment="env"/>
	<property name="version" value="1.3.2"/>
	<property name="javatarget" value="1.5"/>
	<property file="rsc/build/local.properties"/>
	<property name="dist"  value="${dest}/Elexis-${version}"/>
	<property name="name" value="Elexis"/>
	<property name="doc"   value="${dest}/doc"/>
	<property name="docsource" value="${dest}/output/docsource"/>
	<property name="output" value="${dest}/output"/>
	<property name="updatefiles" value="${output}/updater"/>
	<property name="additions" value="${output}/additional"/>
	<property name="plugins" value="${output}/plugins"/>
	<property name="rsc" value="rsc"/>
	<property name="debug" value="yes"/>
	<property name="optimize" value="no"/>

	<!-- Pfade für -classpath des Java-compilers festlegen -->
	<path id="eclipseclasses">
		<pathelement location="${dist}/plugins/"/>
		<pathelement location="${elexis_plugin}/bin"/>
		<fileset dir="${elexis_plugin}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${elexis_plugin}/lib">
		     <include name="*.jar"/>
		</fileset>
		<fileset dir="${eclipse}/plugins">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${elexis_ebanking_plugin}"/>
		<pathelement location="${elexis_artikel_plugin}"/>
	</path>
	<path id="unoclasses">
		<pathelement location="${elexis_plugin}/bin"/>
		<fileset dir="${eclipse}/plugins">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${elexis_oowrapper_plugin}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="prepare">
		<mkdir dir="${dest}"/>
		<mkdir dir="${dist}"/>
		<mkdir dir="${output}"/>
		<mkdir dir="${updatefiles}"/>
		<mkdir dir="${additions}"/>
		<mkdir dir="${plugins}"/>
		<mkdir dir="${docsource}"/>
		<mkdir dir="${doc}"/>
		<copy todir="${dist}">
			<fileset dir="${eclipse}"/>
		</copy>
		<exec command="texify elexis.tex" dir="${source}/dokumentation" />
		<copy file="${source}/dokumentation/elexis.pdf" todir="${dist}"></copy>
		<available file="../Elexis-MMC" property="updater.ok"/>
	</target>


	<target name="all" depends="prepare"/>

	<!-- Plugin ins additions-Verzeichnis für externe plugins bereitstellen -->
	<!-- make_addition, pluginname  -->
	<target name="make_addition">
		<mkdir dir="${additions}/${pluginname}"/>
		<mkdir dir="${additions}/${pluginname}/plugins"/>
		<mkdir dir="${additions}/${pluginname}/plugins/${targetdir}"/>
		<copy todir="${additions}/${pluginname}/plugins/${targetdir}">
			<fileset dir="${dist}/plugins/${targetdir}"/>
		</copy>
		<zip basedir="${additions}/${pluginname}" destfile="${additions}/${pluginname}.zip"/>
		<deltree dir="${additions}/${pluginname}"/>
	</target>

	<target name="copy_plugin">
		<echo message="${copydest} , und ${copysrc}"/>
		<mkdir dir="${copydest}"/>
		<copy todir="${copydest}">
			<fileset dir="${copysrc}">
				<include name="*.jar"/>
				<include name="*.xml"/>
				<include name="*.bmp"/>
				<include name="*.properties"/>
				<include name="bin/**/*.properties"/>
				<include name="icons/**/*.*"/>
				<include name="rsc/**/*.*"/>
				<include name="lib/**/*.*"/>
				<include name= "META-INF/MANIFEST.MF"/>
				<include name="meta-inf/manifest.mf"/>
			</fileset>
		</copy>
		<copy todir="${copydest}" failonerror="false">
			<fileset dir="${copysrc}/src" includes="**/*.script"/>
			<fileset dir="${copysrc}/src" includes="**/*.properties"/>
		</copy>
	</target>

	<target name="texify">
		<echo message="texify ${sourcedir}/doc/${pluginname}.tex dir=${docsource}" />
	    <exec command="texify ${sourcedir}/doc/${pluginname}.tex" dir="${docsource}" />
		<copy file="${docsource}/${pluginname}.pdf" todir="${doc}"/>
	</target>
	
	<target name="updater" if="updater.ok">
		   <ant antfile="updater.xml"/>
	</target>
	
	
	<target name="pro" depends="prepare">
		   <ant antfile="rsc/build/plugins.xml" target="elexis-pro"/>
	</target>
	
	<!-- Windows - Version der Distribution -->
	<target name="windows" depends="prepare, updater">
		<ant antfile="rsc/build/plugins.xml" target="main"/>
		<ant antfile="../noatext/build.xml"/>		
		<ant antfile="../elexis-trustx-embed/build.xml"/>
		 <mkdir dir="${dist}/jre"/>
		 <copy todir="${dist}/jre">
			 <fileset dir="${jre}"/>
		 </copy>
		<exec dir="rsc/build" executable="${nsis}">
			<arg line="elexis-win32-nodemo.nsi"/>
		</exec>
	</target>

	<!-- Linux x86 Version der Distribution -->
	<target name="Linux" depends="prepare">
		<!-- ant antfile="../Oowrapper/build.xml"/ -->
		<copy file="${rsc}/elexis.xpm" tofile="${dist}/elexis.xpm"/>
		
		<!-- we can not use the copy-task, since this doesn't preserve the attributes -->
		<exec executable="cp">
			<arg line="-r ${jre} ${dist}/jre"/>
		</exec>
		 <!-- exec executable="${makeself}">
			 <arg value="- -notemp"/>
			 <arg value="${dist}"/>
			 <arg value="${output}/elexis-linux-i386-${version}.run"/>
			 <arg value="Elexis ${version}"/>
			 <arg value="chmod +x elexis"/>
		 </exec-->
		<exec executable="chmod" dir="${dist}">
					<arg line="+x elexis"/>
		</exec>
		<exec executable="tar" dir="${dest}">
		    <arg line="-czf ${output}/elexis-linux-i386-${version}.tgz Elexis-${version}"/>
		</exec>
	</target>

	<!-- Mac OSX Version der Distribution -->
	<target name="mac" depends="all">
		<copy file="${rsc}/elexis-mac.icns" tofile="${dist}/elexis-mac.icns"/>
		<zip basedir="${dist}" destfile="${dest}/output/elexis-macosx-${version}.zip"/>
	</target>

	<!-- Alles aufräumen -->
	<target name="clean" description="Alle vom Build erstellen files löschen">
		<delete dir="${dest}"/>
	</target>

</project>
{toc}

h1. How to setup the test environment

# Install SWTBot in Eclipse
# Create a new Run Configuration of Type "SWTBot Test"
*  in Tab "Test" set ch.elexis.uitests.core.TestElexisCore" as Test class and
*  select JUnit4 as Test runner.
*  The toggle "Run in UI thread" must be selected.
*  In Tab "Main" set "Run an application" to ch.elexis.ElexisApp
*  In Tab "Arguments" add to "VM args"  the username/password to access the mySql database<br>*-Dch.elexis.username=yourName  -Dch.elexis.password=topsecret*
*  If you want to save screenshots of the dialogs add to "VM args"<br>*-Dch.elexis.saveScreenshot=true*
*  In Tab "Plug-Ins" select all Plugins that are required to run elexis (select the elexis plugins and click "add required plugins"

h2. Run the SWTbot

Run/debug the configuration "SWTBot Test". Wait 15 or more seconds to see start. Then watch it as it flies by. It will produce a log file in the current directory.

h2. command line

Under Linux you may adapt run_swtbot.sh to make it run the SWTbot-test from
the command line.

h1. YARI

The author of the first tast cases found "YARI":https://sourceforge.net/apps/trac/yari/ (Yet Another RCP Inspector)
a nice tool to understand how the graphical elements of elexis were composed of.

In order to use it you have to add the "sf.net.yari.*" plugins to your list of plugins to run.

h1. Howto write a new test

Follow an example. The following tests are show-cases, which should get you up and running
*  laborimport.TestAnalytica
??? More to come?
If you want to watch one test, run it alone and "slow done":http://wiki.eclipse.org/SWTBot/FAQ#Can_I_slow_down_the_execution_speed_of_SWTBot_tests.3F  its execution speed by setting. Add "SWTBotPreferences.PLAYBACK_DELAY = 10;" to your test case.

Don't forget to add your testcase/suite to ch.elexis.uitest/AllTests.java.

h1. Things to watch out

* Each tests adds overhead, though don't test too trivial things too hard.
* Test first the common path
* Test rarely used, but vital stuff, e.g. setup/preferences
* Are there some low hanging fruits around (e.g. snapshots, stress tests)
* Will your tests run at another developers site
* Will your tests run on an other OS?
* Will your tests work in another language?

